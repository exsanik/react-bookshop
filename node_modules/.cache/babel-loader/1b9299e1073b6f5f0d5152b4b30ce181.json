{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ExsaNik\\\\NodeJs\\\\react\\\\redux-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nconst initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [{\n    id: 1,\n    title: \"tru book\",\n    amount: 2,\n    price: 100\n  }, {\n    id: 2,\n    title: \"falsh book\",\n    amount: 2,\n    price: 100\n  }],\n  cartTotal: 200\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return _objectSpread({}, state, {\n        loading: true,\n        error: null\n      });\n\n    case 'FETCH_BOOKS_SUCCESS':\n      return _objectSpread({}, state, {\n        books: action.payload,\n        loading: false,\n        error: null\n      });\n\n    case 'FETCH_BOOKS_FAILURE':\n      return _objectSpread({}, state, {\n        books: [],\n        loading: false,\n        error: action.payload\n      });\n\n    case 'ADD_BOOK_TO_CART':\n      const _state$books$action$p = state.books[action.payload],\n            id = _state$books$action$p.id,\n            title = _state$books$action$p.title,\n            price = _state$books$action$p.price;\n      const newBook = {\n        id,\n        title,\n        amount: 1,\n        price\n      };\n      return _objectSpread({}, state, {\n        books: [...state.books, newBook]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\ExsaNik\\NodeJs\\react\\redux-store\\src\\reducers\\index.js"],"names":["initialState","books","loading","error","cartItems","id","title","amount","price","cartTotal","reducer","state","action","type","payload","newBook"],"mappings":";AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,OAAO,EAAE,IAFQ;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,UAFX;AAGIC,IAAAA,MAAM,EAAE,CAHZ;AAIIC,IAAAA,KAAK,EAAE;AAJX,GADO,EAOP;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,YAFX;AAGIC,IAAAA,MAAM,EAAE,CAHZ;AAIIC,IAAAA,KAAK,EAAE;AAJX,GAPO,CAJM;AAkBjBC,EAAAA,SAAS,EAAE;AAlBM,CAArB;;AAqBA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,qBAAL;AACI,+BACOF,KADP;AAEIT,QAAAA,OAAO,EAAE,IAFb;AAGIC,QAAAA,KAAK,EAAE;AAHX;;AAKJ,SAAK,qBAAL;AACI,+BACOQ,KADP;AAEIV,QAAAA,KAAK,EAAEW,MAAM,CAACE,OAFlB;AAGIZ,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,KAAK,EAAE;AAJX;;AAMJ,SAAK,qBAAL;AACI,+BACOQ,KADP;AAEIV,QAAAA,KAAK,EAAC,EAFV;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,KAAK,EAAES,MAAM,CAACE;AAJlB;;AAMJ,SAAK,kBAAL;AAAA,oCAC+BH,KAAK,CAACV,KAAN,CAAYW,MAAM,CAACE,OAAnB,CAD/B;AAAA,YACWT,EADX,yBACWA,EADX;AAAA,YACeC,KADf,yBACeA,KADf;AAAA,YACsBE,KADtB,yBACsBA,KADtB;AAEI,YAAMO,OAAO,GAAG;AACZV,QAAAA,EADY;AACRC,QAAAA,KADQ;AACDC,QAAAA,MAAM,EAAE,CADP;AACUC,QAAAA;AADV,OAAhB;AAGA,+BACOG,KADP;AAEIV,QAAAA,KAAK,EAAE,CAAC,GAAGU,KAAK,CAACV,KAAV,EAAiBc,OAAjB;AAFX;;AAIJ;AACI,aAAOJ,KAAP;AAhCR;AAkCH,CAnCD;;AAqCA,eAAeD,OAAf","sourcesContent":["\r\nconst initialState = {\r\n    books: [],\r\n    loading: true,\r\n    error: null,\r\n    cartItems: [\r\n        {\r\n            id: 1,\r\n            title: \"tru book\",\r\n            amount: 2,\r\n            price: 100\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"falsh book\",\r\n            amount: 2,\r\n            price: 100\r\n        }\r\n    ],\r\n    cartTotal: 200\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type)\r\n    {   \r\n        case 'FETCH_BOOKS_REQUEST':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case 'FETCH_BOOKS_SUCCESS':\r\n            return {\r\n                ...state,\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_BOOKS_FAILURE':\r\n            return{\r\n                ...state,\r\n                books:[],\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case 'ADD_BOOK_TO_CART':\r\n            const {id, title, price} = state.books[action.payload];\r\n            const newBook = {\r\n                id, title, amount: 1, price\r\n            }\r\n            return{\r\n                ...state,\r\n                books: [...state.books, newBook]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}