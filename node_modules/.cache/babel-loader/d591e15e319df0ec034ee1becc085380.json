{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ExsaNik\\\\NodeJs\\\\react\\\\redux-store\\\\src\\\\components\\\\book-list\\\\book-list.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from '../../utils';\nimport { withBookstoreService } from '../hoc';\nimport { booksLoaded, booksRequested, booksError } from '../../actions';\nimport BookListItem from '../book-list-item';\nimport Spinner from '../spinner';\n\nclass BookList extends React.Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          bookstoreService = _this$props.bookstoreService,\n          booksLoaded = _this$props.booksLoaded,\n          booksRequested = _this$props.booksRequested,\n          booksError = _this$props.booksError;\n    booksRequested();\n    bookstoreService.getBooks().then(data => booksLoaded(data)).catch(err => booksError(err));\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          books = _this$props2.books,\n          loading = _this$props2.loading;\n    return React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }) : books.map(book => {\n      return React.createElement(\"li\", {\n        className: \"list-group-item\",\n        key: book.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(BookListItem, {\n        book: book,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  books,\n  loading\n}) => {\n  return {\n    books,\n    loading\n  };\n};\n\nconst mapDispatchToProps = {\n  booksLoaded,\n  booksRequested,\n  booksError\n};\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(BookList);","map":{"version":3,"sources":["C:\\Users\\ExsaNik\\NodeJs\\react\\redux-store\\src\\components\\book-list\\book-list.js"],"names":["React","connect","compose","withBookstoreService","booksLoaded","booksRequested","booksError","BookListItem","Spinner","BookList","Component","componentDidMount","props","bookstoreService","getBooks","then","data","catch","err","render","books","loading","map","book","id","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAuB,aAAvB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,oBAAR,QAAmC,QAAnC;AACA,SAAQC,WAAR,EAAqBC,cAArB,EAAqCC,UAArC,QAAsD,eAAtD;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CACA;AACIC,EAAAA,iBAAiB,GACjB;AAAA,wBACwE,KAAKC,KAD7E;AAAA,UACWC,gBADX,eACWA,gBADX;AAAA,UAC6BT,WAD7B,eAC6BA,WAD7B;AAAA,UAC0CC,cAD1C,eAC0CA,cAD1C;AAAA,UAC0DC,UAD1D,eAC0DA,UAD1D;AAEID,IAAAA,cAAc;AACdQ,IAAAA,gBAAgB,CAACC,QAAjB,GACKC,IADL,CACWC,IAAD,IAAUZ,WAAW,CAACY,IAAD,CAD/B,EAEKC,KAFL,CAEYC,GAAD,IAASZ,UAAU,CAACY,GAAD,CAF9B;AAGH;;AACDC,EAAAA,MAAM,GACN;AAAA,yBAC6B,KAAKP,KADlC;AAAA,UACWQ,KADX,gBACWA,KADX;AAAA,UACkBC,OADlB,gBACkBA,OADlB;AAEI,WACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQA,OAAO,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAiBD,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;AACxC,aACI;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAgC,QAAA,GAAG,EAAIA,IAAI,CAACC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgD,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAGD,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhD,CADJ;AAGH,KAJuB,CAFhC,CADJ;AAWH;;AAvBL;;AA0BA,MAAME,eAAe,GAAG,CAAC;AAACL,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAsB;AAC1C,SAAO;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP;AACH,CAFD;;AAIA,MAAMK,kBAAkB,GAAG;AACvBtB,EAAAA,WADuB;AAEvBC,EAAAA,cAFuB;AAGvBC,EAAAA;AAHuB,CAA3B;AAMA,eAAeJ,OAAO,CACdC,oBAAoB,EADN,EAEdF,OAAO,CAACwB,eAAD,EAAkBC,kBAAlB,CAFO,CAAP,CAGTjB,QAHS,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect } from 'react-redux'\r\n\r\nimport {compose} from '../../utils';\r\nimport {withBookstoreService} from '../hoc';\r\nimport {booksLoaded, booksRequested, booksError} from '../../actions';\r\nimport BookListItem from '../book-list-item';\r\nimport Spinner from '../spinner';\r\n\r\nclass BookList extends React.Component \r\n{\r\n    componentDidMount()\r\n    {\r\n        const {bookstoreService, booksLoaded, booksRequested, booksError} = this.props;\r\n        booksRequested();\r\n        bookstoreService.getBooks()\r\n            .then((data) => booksLoaded(data))\r\n            .catch((err) => booksError(err));\r\n    }\r\n    render() \r\n    {\r\n        const {books, loading} = this.props;\r\n        return(\r\n            <ul className=\"list-group\">\r\n                {\r\n                    loading ? <Spinner /> : books.map((book) => {\r\n                        return (\r\n                            <li className=\"list-group-item\" key = {book.id}><BookListItem book ={book}/></li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({books, loading}) => {\r\n    return { books, loading }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    booksLoaded,\r\n    booksRequested,\r\n    booksError\r\n};\r\n\r\nexport default compose(\r\n        withBookstoreService(),\r\n        connect(mapStateToProps, mapDispatchToProps)\r\n    )(BookList);\r\n"]},"metadata":{},"sourceType":"module"}