{"ast":null,"code":"const booksRequested = () => {\n  return {\n    type: 'FETCH_BOOKS_REQUEST'\n  };\n};\n\nconst booksLoaded = newBooks => {\n  return {\n    type: 'FETCH_BOOKS_SUCCESS',\n    payload: newBooks\n  };\n};\n\nconst booksError = error => {\n  return {\n    type: 'FETCH_BOOKS_FAILURE',\n    payload: error\n  };\n};\n\nconst addBookToCart = bookId => {\n  return {\n    type: 'ADD_BOOK_TO_CART',\n    payload: bookId\n  };\n};\n\nconst fetchBooks = (dispatch, bookstoreService) => () => {\n  dispatch(booksRequested());\n  bookstoreService.getBooks().then(data => dispatch(booksLoaded(data))).catch(err => dispatch(booksError(err)));\n};\n\nexport { fetchBooks };","map":{"version":3,"sources":["C:\\Users\\ExsaNik\\NodeJs\\react\\redux-store\\src\\actions\\index.js"],"names":["booksRequested","type","booksLoaded","newBooks","payload","booksError","error","addBookToCart","bookId","fetchBooks","dispatch","bookstoreService","getBooks","then","data","catch","err"],"mappings":"AAAA,MAAMA,cAAc,GAAG,MAAM;AACzB,SAAO;AACHC,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD;;AAMA,MAAMC,WAAW,GAAIC,QAAD,IAAc;AAC9B,SAAO;AACHF,IAAAA,IAAI,EAAE,qBADH;AAEHG,IAAAA,OAAO,EAAED;AAFN,GAAP;AAIH,CALD;;AAOA,MAAME,UAAU,GAAIC,KAAD,IAAW;AAC1B,SAAO;AACHL,IAAAA,IAAI,EAAE,qBADH;AAEHG,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALD;;AAOA,MAAMC,aAAa,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHP,IAAAA,IAAI,EAAE,kBADH;AAEHG,IAAAA,OAAO,EAAEI;AAFN,GAAP;AAIH,CALD;;AAOA,MAAMC,UAAU,GAAG,CAACC,QAAD,EAAWC,gBAAX,KAAgC,MAAM;AACrDD,EAAAA,QAAQ,CAACV,cAAc,EAAf,CAAR;AACAW,EAAAA,gBAAgB,CAACC,QAAjB,GACKC,IADL,CACWC,IAAD,IAAUJ,QAAQ,CAACR,WAAW,CAACY,IAAD,CAAZ,CAD5B,EAEKC,KAFL,CAEYC,GAAD,IAASN,QAAQ,CAACL,UAAU,CAACW,GAAD,CAAX,CAF5B;AAGH,CALD;;AAOA,SACIP,UADJ","sourcesContent":["const booksRequested = () => {\r\n    return {\r\n        type: 'FETCH_BOOKS_REQUEST' \r\n    }\r\n}\r\n\r\nconst booksLoaded = (newBooks) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_SUCCESS',\r\n        payload: newBooks\r\n    };\r\n};\r\n\r\nconst booksError = (error) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst addBookToCart = (bookId) => {\r\n    return {\r\n        type: 'ADD_BOOK_TO_CART',\r\n        payload: bookId\r\n    }\r\n};\r\n\r\nconst fetchBooks = (dispatch, bookstoreService) => () => {\r\n    dispatch(booksRequested());\r\n    bookstoreService.getBooks()\r\n        .then((data) => dispatch(booksLoaded(data)))\r\n        .catch((err) => dispatch(booksError(err)));\r\n}\r\n\r\nexport {\r\n    fetchBooks\r\n};"]},"metadata":{},"sourceType":"module"}