{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ExsaNik\\\\NodeJs\\\\react\\\\redux-store\\\\src\\\\components\\\\book-list\\\\book-list.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from '../../utils';\nimport { withBookstoreService } from '../hoc';\nimport { fetchBooks } from '../../actions';\nimport BookListItem from '../book-list-item';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\n\nconst BookList = ({\n  books\n}) => {\n  return React.createElement(\"ul\", {\n    className: \"list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, books.map(book => {\n    return React.createElement(\"li\", {\n      className: \"list-group-item\",\n      key: book.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(BookListItem, {\n      book: book,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }));\n  }));\n};\n\nclass BookListContainer extends React.Component {\n  componentDidMount() {\n    this.props.fetchBooks();\n  }\n\n  render() {\n    const _this$props = this.props,\n          books = _this$props.books,\n          loading = _this$props.loading,\n          error = _this$props.error;\n    if (error) return React.createElement(ErrorIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n    if (loading) return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n    return React.createElement(BookList, {\n      books: books,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = ({\n  books,\n  loading,\n  error\n}) => {\n  return {\n    books,\n    loading,\n    error\n  };\n};\n\nconst mapDispatchToProps = (dispatch, {\n  bookstoreService\n}) => {\n  return {\n    fetchBooks: fetchBooks(dispatch, bookstoreService)\n  };\n};\n\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(BookListContainer);","map":{"version":3,"sources":["C:\\Users\\ExsaNik\\NodeJs\\react\\redux-store\\src\\components\\book-list\\book-list.js"],"names":["React","connect","compose","withBookstoreService","fetchBooks","BookListItem","Spinner","ErrorIndicator","BookList","books","map","book","id","BookListContainer","Component","componentDidMount","props","render","loading","error","mapStateToProps","mapDispatchToProps","dispatch","bookstoreService"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAuB,aAAvB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,oBAAR,QAAmC,QAAnC;AACA,SAAQC,UAAR,QAAyB,eAAzB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC1B,SACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQA,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AAChB,WACI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAgC,MAAA,GAAG,EAAIA,IAAI,CAACC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgD,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAGD,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhD,CADJ;AAGH,GAJD,CAFR,CADJ;AAWH,CAZD;;AAcA,MAAME,iBAAN,SAAgCb,KAAK,CAACc,SAAtC,CACA;AACIC,EAAAA,iBAAiB,GACjB;AACI,SAAKC,KAAL,CAAWZ,UAAX;AACH;;AACDa,EAAAA,MAAM,GACN;AAAA,wBACoC,KAAKD,KADzC;AAAA,UACWP,KADX,eACWA,KADX;AAAA,UACkBS,OADlB,eACkBA,OADlB;AAAA,UAC2BC,KAD3B,eAC2BA,KAD3B;AAEI,QAAGA,KAAH,EACI,OAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACJ,QAAGD,OAAH,EACI,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEJ,WAAO,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAIT,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAdL;;AAmBA,MAAMW,eAAe,GAAG,CAAC;AAACX,EAAAA,KAAD;AAAQS,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAA6B;AACjD,SAAO;AAAEV,IAAAA,KAAF;AAASS,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAP;AACH,CAFD;;AAIA,MAAME,kBAAkB,GAAG,CAACC,QAAD,EAAW;AAACC,EAAAA;AAAD,CAAX,KAAkC;AACzD,SAAO;AACHnB,IAAAA,UAAU,EAAEA,UAAU,CAACkB,QAAD,EAAWC,gBAAX;AADnB,GAAP;AAGH,CAJD;;AAMA,eAAerB,OAAO,CACdC,oBAAoB,EADN,EAEdF,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAFO,CAAP,CAGTR,iBAHS,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect } from 'react-redux'\r\n\r\nimport {compose} from '../../utils';\r\nimport {withBookstoreService} from '../hoc';\r\nimport {fetchBooks} from '../../actions';\r\nimport BookListItem from '../book-list-item';\r\nimport Spinner from '../spinner';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nconst BookList = ({books}) => {\r\n    return(\r\n        <ul className=\"list-group\">\r\n            {\r\n                books.map((book) => {\r\n                    return (\r\n                        <li className=\"list-group-item\" key = {book.id}><BookListItem book ={book}/></li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nclass BookListContainer extends React.Component \r\n{\r\n    componentDidMount()\r\n    {\r\n        this.props.fetchBooks();\r\n    }\r\n    render() \r\n    {\r\n        const {books, loading, error} = this.props;\r\n        if(error)\r\n            return <ErrorIndicator />;\r\n        if(loading)\r\n            return <Spinner />;\r\n        \r\n        return <BookList books = {books} />;\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = ({books, loading, error}) => {\r\n    return { books, loading, error}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, {bookstoreService}) => {\r\n    return {\r\n        fetchBooks: fetchBooks(dispatch, bookstoreService)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n        withBookstoreService(),\r\n        connect(mapStateToProps, mapDispatchToProps)\r\n    )(BookListContainer);\r\n"]},"metadata":{},"sourceType":"module"}