{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ExsaNik\\\\NodeJs\\\\react\\\\redux-store\\\\src\\\\components\\\\book-list\\\\book-list.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withBookstoreService } from '../bookstore-context';\nimport BookListItem from '../book-list-item';\n\nclass BookList extends React.Component {\n  componentDidMount() {\n    const bookstoreService = this.props.bookstoreService;\n    const data = bookstoreService.getBooks();\n    this.props.booksLoaded(data);\n  }\n\n  render() {\n    const books = this.props.books;\n    return React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, books.map(book => {\n      return React.createElement(\"li\", {\n        className: \"list-group-item\",\n        key: book.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(BookListItem, {\n        book: book,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  books\n}) => {\n  return {\n    books\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    booksLoaded: newBooks => {\n      dispatch({\n        type: 'BOOKS_LOADED',\n        payload: newBooks\n      });\n    }\n  };\n};\n\nexport default withBookstoreService()(connect(mapStateToProps, mapDispatchToProps)(BookList));","map":{"version":3,"sources":["C:\\Users\\ExsaNik\\NodeJs\\react\\redux-store\\src\\components\\book-list\\book-list.js"],"names":["React","connect","withBookstoreService","BookListItem","BookList","Component","componentDidMount","bookstoreService","props","data","getBooks","booksLoaded","render","books","map","book","id","mapStateToProps","mapDispatchToProps","dispatch","newBooks","type","payload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAuB,aAAvB;AAEA,SAAQC,oBAAR,QAAmC,sBAAnC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CACA;AACIC,EAAAA,iBAAiB,GACjB;AAAA,UACWC,gBADX,GAC+B,KAAKC,KADpC,CACWD,gBADX;AAEI,UAAME,IAAI,GAAGF,gBAAgB,CAACG,QAAjB,EAAb;AAEA,SAAKF,KAAL,CAAWG,WAAX,CAAuBF,IAAvB;AACH;;AACDG,EAAAA,MAAM,GACN;AAAA,UACWC,KADX,GACoB,KAAKL,KADzB,CACWK,KADX;AAEI,WACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQA,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AAChB,aACI;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAgC,QAAA,GAAG,EAAIA,IAAI,CAACC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgD,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAGD,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhD,CADJ;AAGH,KAJD,CAFR,CADJ;AAWH;;AAtBL;;AAyBA,MAAME,eAAe,GAAG,CAAC;AAACJ,EAAAA;AAAD,CAAD,KAAa;AACjC,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH,CAFD;;AAIA,MAAMK,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHR,IAAAA,WAAW,EAAGS,QAAD,IAAc;AACvBD,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAE,cADD;AAELC,QAAAA,OAAO,EAAEF;AAFJ,OAAD,CAAR;AAIH;AANE,GAAP;AAQH,CATD;;AAWA,eAAelB,oBAAoB,GAC/BD,OAAO,CAACgB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cd,QAA7C,CAD+B,CAAnC","sourcesContent":["import React from 'react';\r\nimport {connect } from 'react-redux'\r\n\r\nimport {withBookstoreService} from '../bookstore-context';\r\nimport BookListItem from '../book-list-item';\r\n\r\nclass BookList extends React.Component \r\n{\r\n    componentDidMount()\r\n    {\r\n        const {bookstoreService} = this.props;\r\n        const data = bookstoreService.getBooks();\r\n\r\n        this.props.booksLoaded(data);\r\n    }\r\n    render() \r\n    {\r\n        const {books} = this.props;\r\n        return(\r\n            <ul className=\"list-group\">\r\n                {\r\n                    books.map((book) => {\r\n                        return (\r\n                            <li className=\"list-group-item\" key = {book.id}><BookListItem book ={book}/></li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({books}) => {\r\n    return { books }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        booksLoaded: (newBooks) => {\r\n            dispatch({\r\n                type: 'BOOKS_LOADED',\r\n                payload: newBooks\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default withBookstoreService()(\r\n    connect(mapStateToProps, mapDispatchToProps)(BookList));"]},"metadata":{},"sourceType":"module"}