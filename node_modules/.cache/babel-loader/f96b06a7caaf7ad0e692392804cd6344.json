{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ExsaNik\\\\NodeJs\\\\react\\\\redux-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nconst initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  cartTotal: 0\n};\n\nconst updateItem = (ind, book, cartItems, cartTotal, flag = 1) => {\n  let item = cartItems[ind];\n  if (!item) item = {};\n  const _item = item,\n        _item$id = _item.id,\n        id = _item$id === void 0 ? book.id : _item$id,\n        _item$title = _item.title,\n        title = _item$title === void 0 ? book.title : _item$title,\n        _item$amount = _item.amount,\n        amount = _item$amount === void 0 ? 0 : _item$amount,\n        _item$price = _item.price,\n        price = _item$price === void 0 ? 0 : _item$price;\n  const newItem = {\n    id,\n    title,\n    amount: amount + 1 * flag,\n    price: price + book.price * flag\n  };\n  let cart = {\n    cartTotal: cartTotal + price * flag\n  };\n  if (ind !== -1) cart.cartItems = [...cartItems.slice(0, ind), newItem, ...cartItems.slice(ind + 1)];else cart.cartItems = [...cartItems, newItem];\n  return cart;\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return _objectSpread({}, state, {\n        loading: true,\n        error: null\n      });\n\n    case 'FETCH_BOOKS_SUCCESS':\n      return _objectSpread({}, state, {\n        books: action.payload,\n        loading: false,\n        error: null\n      });\n\n    case 'FETCH_BOOKS_FAILURE':\n      return _objectSpread({}, state, {\n        books: [],\n        loading: false,\n        error: action.payload\n      });\n\n    case 'ADD_BOOK_TO_CART':\n      const bookId = action.payload;\n      const book = state.books.find(book => book.id === bookId);\n      const indInCart = state.cartItems.findIndex(item => item.id === book.id);\n\n      const _updateItem = updateItem(indInCart, book, state.cartItems, state.cartTotal),\n            cartTotal = _updateItem.cartTotal,\n            cartItems = _updateItem.cartItems;\n\n      return _objectSpread({}, state, {\n        cartTotal,\n        cartItems\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\ExsaNik\\NodeJs\\react\\redux-store\\src\\reducers\\index.js"],"names":["initialState","books","loading","error","cartItems","cartTotal","updateItem","ind","book","flag","item","id","title","amount","price","newItem","cart","slice","reducer","state","action","type","payload","bookId","find","indInCart","findIndex"],"mappings":"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","sourcesContent":["\r\nconst initialState = {\r\n    books: [],\r\n    loading: true,\r\n    error: null,\r\n    cartItems: [],\r\n    cartTotal: 0\r\n};\r\n\r\nconst updateItem = (ind, book, cartItems, cartTotal, flag = 1) => {\r\n    let item = cartItems[ind]; \r\n    if(!item) item = {}; \r\n    const {id = book.id, title = book.title, amount = 0, price = 0} = item;\r\n    const newItem = {id, title, amount: amount+(1*flag), price: price+(book.price*flag)};\r\n\r\n    let cart = {cartTotal: cartTotal+(price*flag)}\r\n    if(ind!==-1)\r\n        cart.cartItems = [...cartItems.slice(0, ind), newItem, ...cartItems.slice(ind+1)];\r\n    else\r\n        cart.cartItems = [...cartItems, newItem]; \r\n\r\n    return cart;\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type)\r\n    {   \r\n        case 'FETCH_BOOKS_REQUEST':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case 'FETCH_BOOKS_SUCCESS':\r\n            return {\r\n                ...state,\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_BOOKS_FAILURE':\r\n            return{\r\n                ...state,\r\n                books:[],\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case 'ADD_BOOK_TO_CART':\r\n            const bookId = action.payload;\r\n            const book = state.books.find((book) => book.id === bookId);\r\n            const indInCart = state.cartItems.findIndex((item) => item.id === book.id);\r\n\r\n            const {cartTotal, cartItems} = updateItem(indInCart, book, state.cartItems, state.cartTotal);\r\n            return{\r\n                ...state,\r\n                cartTotal,\r\n                cartItems\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}