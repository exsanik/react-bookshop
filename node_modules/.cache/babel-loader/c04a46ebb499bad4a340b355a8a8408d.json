{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ExsaNik\\\\NodeJs\\\\react\\\\redux-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nconst initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  cartTotal: 0\n};\n\nconst updateItem = (ind, book, item = {}, flag = 1) => {\n  var _item, _item$id, _item$title, _item$amount, _item$price;\n\n  const newItem = (_item = item, _item$id = _item.id, id = _item$id === void 0 ? book.id : _item$id, _item$title = _item.title, title = _item$title === void 0 ? book.title : _item$title, _item$amount = _item.amount, amount = _item$amount === void 0 ? amount + 1 * flag : _item$amount, _item$price = _item.price, price = _item$price === void 0 ? price + book.price * flag : _item$price, _item);\n  let cart = {\n    cartTotal: state.cartTotal + price\n  };\n  if (ind !== -1) cart.cartItems = [...state.cartItems.slice(0, indInCart), newItem, ...state.cartItems.slice(indInCart + 1)];else cart.cartItems = [...state.cartItems, newItem];\n  return cart;\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return _objectSpread({}, state, {\n        loading: true,\n        error: null\n      });\n\n    case 'FETCH_BOOKS_SUCCESS':\n      return _objectSpread({}, state, {\n        books: action.payload,\n        loading: false,\n        error: null\n      });\n\n    case 'FETCH_BOOKS_FAILURE':\n      return _objectSpread({}, state, {\n        books: [],\n        loading: false,\n        error: action.payload\n      });\n\n    case 'ADD_BOOK_TO_CART':\n      const bookId = action.payload;\n      const book = state.books.find(book => book.id === bookId);\n      const indInCart = state.cartItems.findIndex(item => item.id === id);\n\n      const _updateItem = updateItem(indInCart, book, state.cartItems[indInCart]),\n            cartTotal = _updateItem.cartTotal,\n            cartItems = _updateItem.cartItems;\n\n      return _objectSpread({}, state, {\n        cartTotal,\n        cartItems\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\ExsaNik\\NodeJs\\react\\redux-store\\src\\reducers\\index.js"],"names":["initialState","books","loading","error","cartItems","cartTotal","updateItem","ind","book","item","flag","newItem","id","title","amount","price","cart","state","slice","indInCart","reducer","action","type","payload","bookId","find","findIndex"],"mappings":";AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,OAAO,EAAE,IAFQ;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,SAAS,EAAE,EAJM;AAKjBC,EAAAA,SAAS,EAAE;AALM,CAArB;;AAQA,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,IAAI,GAAG,EAAnB,EAAuBC,IAAI,GAAG,CAA9B,KAAoC;AAAA;;AACnD,QAAMC,OAAO,YAAmGF,IAAnG,mBAAIG,EAAJ,EAAIA,EAAJ,yBAASJ,IAAI,CAACI,EAAd,iCAAkBC,KAAlB,EAAkBA,KAAlB,4BAA0BL,IAAI,CAACK,KAA/B,qCAAsCC,MAAtC,EAAsCA,MAAtC,6BAA+CA,MAAM,GAAE,IAAEJ,IAAzD,qCAAgEK,KAAhE,EAAgEA,KAAhE,4BAAwEA,KAAK,GAAEP,IAAI,CAACO,KAAL,GAAWL,IAA1F,sBAAb;AAEA,MAAIM,IAAI,GAAG;AAACX,IAAAA,SAAS,EAAEY,KAAK,CAACZ,SAAN,GAAgBU;AAA5B,GAAX;AACA,MAAGR,GAAG,KAAG,CAAC,CAAV,EACIS,IAAI,CAACZ,SAAL,GAAiB,CAAC,GAAGa,KAAK,CAACb,SAAN,CAAgBc,KAAhB,CAAsB,CAAtB,EAAyBC,SAAzB,CAAJ,EAAyCR,OAAzC,EAAkD,GAAGM,KAAK,CAACb,SAAN,CAAgBc,KAAhB,CAAsBC,SAAS,GAAC,CAAhC,CAArD,CAAjB,CADJ,KAGIH,IAAI,CAACZ,SAAL,GAAiB,CAAC,GAAGa,KAAK,CAACb,SAAV,EAAqBO,OAArB,CAAjB;AAEJ,SAAOK,IAAP;AACH,CAVD;;AAYA,MAAMI,OAAO,GAAG,CAACH,KAAK,GAAGjB,YAAT,EAAuBqB,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,qBAAL;AACI,+BACOL,KADP;AAEIf,QAAAA,OAAO,EAAE,IAFb;AAGIC,QAAAA,KAAK,EAAE;AAHX;;AAKJ,SAAK,qBAAL;AACI,+BACOc,KADP;AAEIhB,QAAAA,KAAK,EAAEoB,MAAM,CAACE,OAFlB;AAGIrB,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,KAAK,EAAE;AAJX;;AAMJ,SAAK,qBAAL;AACI,+BACOc,KADP;AAEIhB,QAAAA,KAAK,EAAC,EAFV;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,KAAK,EAAEkB,MAAM,CAACE;AAJlB;;AAMJ,SAAK,kBAAL;AACI,YAAMC,MAAM,GAAGH,MAAM,CAACE,OAAtB;AACA,YAAMf,IAAI,GAAGS,KAAK,CAAChB,KAAN,CAAYwB,IAAZ,CAAkBjB,IAAD,IAAUA,IAAI,CAACI,EAAL,KAAYY,MAAvC,CAAb;AACA,YAAML,SAAS,GAAGF,KAAK,CAACb,SAAN,CAAgBsB,SAAhB,CAA2BjB,IAAD,IAAUA,IAAI,CAACG,EAAL,KAAYA,EAAhD,CAAlB;;AAHJ,0BAKmCN,UAAU,CAACa,SAAD,EAAYX,IAAZ,EAAmBS,KAAK,CAACb,SAAN,CAAgBe,SAAhB,CAAnB,CAL7C;AAAA,YAKWd,SALX,eAKWA,SALX;AAAA,YAKsBD,SALtB,eAKsBA,SALtB;;AAMI,+BACOa,KADP;AAEIZ,QAAAA,SAFJ;AAGID,QAAAA;AAHJ;;AAMJ;AACI,aAAOa,KAAP;AAnCR;AAqCH,CAtCD;;AAwCA,eAAeG,OAAf","sourcesContent":["\r\nconst initialState = {\r\n    books: [],\r\n    loading: true,\r\n    error: null,\r\n    cartItems: [],\r\n    cartTotal: 0\r\n};\r\n\r\nconst updateItem = (ind, book, item = {}, flag = 1) => {\r\n    const newItem = {id = book.id, title = book.title, amount = amount+(1*flag), price = price+(book.price*flag)} = item;\r\n\r\n    let cart = {cartTotal: state.cartTotal+price}\r\n    if(ind!==-1)\r\n        cart.cartItems = [...state.cartItems.slice(0, indInCart), newItem, ...state.cartItems.slice(indInCart+1)];\r\n    else\r\n        cart.cartItems = [...state.cartItems, newItem]; \r\n\r\n    return cart;\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type)\r\n    {   \r\n        case 'FETCH_BOOKS_REQUEST':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case 'FETCH_BOOKS_SUCCESS':\r\n            return {\r\n                ...state,\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_BOOKS_FAILURE':\r\n            return{\r\n                ...state,\r\n                books:[],\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case 'ADD_BOOK_TO_CART':\r\n            const bookId = action.payload;\r\n            const book = state.books.find((book) => book.id === bookId);\r\n            const indInCart = state.cartItems.findIndex((item) => item.id === id);\r\n\r\n            const {cartTotal, cartItems} = updateItem(indInCart, book,  state.cartItems[indInCart]);\r\n            return{\r\n                ...state,\r\n                cartTotal,\r\n                cartItems\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}