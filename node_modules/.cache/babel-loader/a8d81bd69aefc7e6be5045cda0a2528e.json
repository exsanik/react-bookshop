{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ExsaNik\\\\NodeJs\\\\react\\\\redux-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nconst initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  cartTotal: 0\n};\n\nconst updateItem = (payload, state, quantity = 1) => {\n  const cartItems = state.cartItems,\n        cartTotal = state.cartTotal,\n        books = state.books;\n  const ind = cartItems.findIndex(item => item.id === payload);\n  const book = books.find(book => book.id === payload);\n  let item = cartItems[ind];\n  if (!item) item = {\n    id: book.id,\n    title: book.title,\n    amount: 0,\n    price: 0\n  };\n  item.amount += quantity;\n  if (quantity < 0 && item.amount === 0) return _objectSpread({}, state, {\n    cartItems: [...cartItems.slice(0, ind), ...cartItems.slice(ind + 1)],\n    cartTotal: cartTotal - item.price\n  });\n  item.price += book.price * quantity;\n  let cart = {\n    cartTotal: cartTotal + book.price * quantity\n  };\n  if (ind !== -1) cart.cartItems = [...cartItems.slice(0, ind), item, ...cartItems.slice(ind + 1)];else cart.cartItems = [...cartItems, item];\n  return _objectSpread({}, state, cart);\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return _objectSpread({}, state, {\n        loading: true,\n        error: null\n      });\n\n    case 'FETCH_BOOKS_SUCCESS':\n      return _objectSpread({}, state, {\n        books: action.payload,\n        loading: false,\n        error: null\n      });\n\n    case 'FETCH_BOOKS_FAILURE':\n      return _objectSpread({}, state, {\n        books: [],\n        loading: false,\n        error: action.payload\n      });\n\n    case 'INCREASE_ITEM_IN_CART':\n      return _objectSpread({}, state, updateItem(action.payload, state));\n\n    case 'DECREASE_ITEM_IN_CART':\n      return _objectSpread({}, state, updateItem(action.payload, state, -1));\n\n    case 'DELETE_ITEM_FROM_CART':\n      const item = state.cartItems.find(item => item.id === action.payload);\n      return _objectSpread({}, state, updateItem(action.payload, state, -item.amount));\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\ExsaNik\\NodeJs\\react\\redux-store\\src\\reducers\\index.js"],"names":["initialState","books","loading","error","cartItems","cartTotal","updateItem","payload","state","quantity","ind","findIndex","item","id","book","find","title","amount","price","slice","cart","reducer","action","type"],"mappings":"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","sourcesContent":["\r\nconst initialState = {\r\n    books: [],\r\n    loading: true,\r\n    error: null,\r\n    cartItems: [],\r\n    cartTotal: 0\r\n};\r\n\r\nconst updateItem = (payload, state, quantity = 1) => {\r\n    const {cartItems, cartTotal, books} = state;\r\n    const ind = cartItems.findIndex((item) => item.id === payload);\r\n    const book = books.find((book) => book.id === payload); \r\n    \r\n    let item = cartItems[ind];\r\n    if(!item)\r\n        item = {id: book.id, title: book.title, amount: 0, price: 0};\r\n    \r\n    item.amount += quantity;  \r\n    if(quantity < 0 && item.amount === 0)\r\n        return {\r\n            ...state,\r\n            cartItems: [...cartItems.slice(0, ind), ...cartItems.slice(ind+1)], \r\n            cartTotal: cartTotal-item.price\r\n        };\r\n\r\n    item.price += book.price * quantity;  \r\n    let cart = {cartTotal: cartTotal+(book.price*quantity)};\r\n    if(ind!==-1)\r\n        cart.cartItems = [...cartItems.slice(0, ind), item, ...cartItems.slice(ind+1)];\r\n    else\r\n        cart.cartItems = [...cartItems, item]; \r\n    return {...state, ...cart};\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type)\r\n    {   \r\n        case 'FETCH_BOOKS_REQUEST':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case 'FETCH_BOOKS_SUCCESS':\r\n            return {\r\n                ...state,\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_BOOKS_FAILURE':\r\n            return{\r\n                ...state,\r\n                books:[],\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case 'INCREASE_ITEM_IN_CART':\r\n            return{\r\n                ...state,\r\n                ...updateItem(action.payload, state)\r\n            }\r\n        case 'DECREASE_ITEM_IN_CART':\r\n            return{\r\n                ...state,\r\n                ...updateItem(action.payload, state, -1)\r\n            }\r\n        case 'DELETE_ITEM_FROM_CART':\r\n            const item = state.cartItems.find((item) => item.id === action.payload);\r\n            return{\r\n                ...state,\r\n                ...updateItem(action.payload, state, -item.amount)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}